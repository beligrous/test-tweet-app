{"version":3,"file":"static/js/314.d69993fc.chunk.js","mappings":"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","sources":["pages/Tweets/tweetsPage.styled.js","service/api.js","components/Cart/cart.styled.js","components/Cart/Avatar.jsx","components/Cart/Cart.jsx","pages/Tweets/TweetsPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport background from \"../../images/background.png\";\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  min-height: 500px;\n  overflow: hidden;\n  border-radius: 10px;\n  background-image: url(${background});\n  background-repeat: repeat-y;\n`;\n\nexport const ListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n  margin-top: 40px;\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n`;\nexport const Button = styled(Link)`\n  position: absolute;\n  top: 0;\n  display: inline-block;\n  align-self: center;\n  color: #5736a3;\n  font-size: 16px;\n  font-family: \"Montserrat\";\n  font-style: normal;\n  font-weight: 600;\n  text-decoration: none;\n  background-color: #ebd8ff;\n  padding: 10px 5px;\n  border-radius: 10px;\n  border: 1px solid #5736a3;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  cursor: pointer;\n  &:hover {\n    box-shadow: none;\n  }\n`;\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nconst notify = (error) => {\n  toast.error(`Something goes wrong ${error.message}`, {\n    position: toast.POSITION.TOP_CENTER,\n  });\n};\n\nconst instance = axios.create({\n  baseURL: \"https://64786fc8362560649a2dc3d8.mockapi.io/tweets\",\n  params: { limit: 3 },\n});\n\nexport async function getUsers(page = 1) {\n  try {\n    const { data } = await instance.get(\"/\", { params: { page } });\n    return data;\n  } catch (error) {\n    notify(error);\n  }\n}\n\nexport async function getUserById(id) {\n  try {\n    const { data } = await instance.get(`/${id}`);\n    return data;\n  } catch (error) {\n    notify(error);\n  }\n}\n\nexport async function getFollow(id, data) {\n  try {\n    const prev = await getUserById(id);\n    await instance.put(`/${id}`, { ...prev, followers: data });\n  } catch (error) {\n    notify(error);\n  }\n}\n","import styled from \"styled-components\";\nimport img from \"../../images/pictureLogo.png\";\nimport logoImg from \"../../images/Logo.png\";\n\nexport const CartContainer = styled.div`\n  margin: 0 auto;\n  position: relative;\n  box-sizing: border-box;\n  padding-top: 28px;\n  max-width: 380px;\n  height: 460px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  max-width: 308px;\n  object-fit: cover;\n  object-position: center top;\n  content: url(${img});\n\n  @media screen and (min-width: 420px) {\n    margin: 0 36px;\n  }\n`;\n\nexport const LogoImage = styled.img`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  width: 76px;\n  object-fit: cover;\n  object-position: center top;\n  content: url(${logoImg});\n`;\n\nexport const Line = styled.div`\n  position: relative;\n  margin-top: 18px;\n  height: 8px;\n  width: 100%;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const Circle = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 80px;\n  top: 0;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 50%;\n`;\n\nexport const Ring = styled.div`\n  width: 62px;\n  height: 62px;\n  border-radius: 50%;\n  overflow: hidden;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n`;\n\nexport const Avatar = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n`;\n\nexport const Name = styled.p`\n  position: absolute;\n  color: #ebd8ff;\n  font-weight: 500;\n  font-size: 40px;\n  line-height: 24px;\n  left: 50%;\n  top: 80px;\n  transform: translateX(-50%);\n`;\n\nexport const Info = styled.p`\n  text-align: center;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  color: #ebd8ff;\n  margin-bottom: 16px;\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin: 26px auto 0 auto;\n  border-width: 0;\n  width: 196px;\n  background: #ebd8ff;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  padding: 14px 0;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n  cursor: pointer;\n  &:hover {\n    box-shadow: none;\n    border: 1px solid #373737;\n  }\n`;\n\nexport const InfoWrap = styled.div`\n  margin-top: 62px;\n  font-family: \"Montserrat\";\n  font-style: normal;\n`;\n","import { PropTypes } from \"prop-types\";\nimport { Circle, Ring, Avatar } from \"./cart.styled\";\n\nconst AvatarRing = ({ src }) => {\n  return (\n    <Circle>\n      <Ring>\n        <Avatar src={src} alt=\"avatar\" />\n      </Ring>\n    </Circle>\n  );\n};\n\nexport default AvatarRing;\n\nAvatarRing.propTypes = {\n  src: PropTypes.string.isRequired,\n};\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getFollow } from \"../../service/api\";\nimport { useFollow } from \"../../service/context\";\nimport AvatarRing from \"./Avatar\";\nimport {\n  CartContainer,\n  Image,\n  LogoImage,\n  Name,\n  Line,\n  Info,\n  Button,\n  InfoWrap,\n} from \"./cart.styled\";\n\nconst Cart = ({ user }) => {\n  const { follow, addFollow, removeFollow } = useFollow();\n  const isFollowCart = follow\n    ? follow.some((item) => item.id === user.id)\n    : false;\n  const [isFollow, setIsFollow] = useState(isFollowCart);\n  const [followers, setFollowers] = useState(user.followers);\n\n  const toggleFollow = async () => {\n    let data;\n    if (isFollow) {\n      setIsFollow(false);\n      removeFollow({ id: user.id, followers: user.followers });\n      data = followers - 1;\n      setFollowers(data);\n      getFollow(user.id, data);\n      return;\n    } else {\n      setIsFollow(true);\n      addFollow({ id: user.id, followers: user.followers });\n      data = followers + 1;\n      setFollowers(data);\n      getFollow(user.id, data);\n    }\n  };\n\n  const numberPrettier = (num) => {\n    let result;\n    if (num < 1000) {\n      result = num;\n    } else {\n      result = num.toString().split(\"\");\n      result.splice(-3, 0, \",\");\n    }\n    return result;\n  };\n\n  return (\n    <CartContainer>\n      <Name>{user.user}</Name>\n      <LogoImage />\n      <Image />\n      <Line>\n        <AvatarRing src={user.avatar} />\n      </Line>\n      <InfoWrap>\n        <Info>{numberPrettier(user.tweets)} tweets</Info>\n        <Info>{numberPrettier(followers)} followers</Info>\n        <Button\n          style={{ backgroundColor: isFollow ? \"#5CD3A8\" : \"#EBD8FF\" }}\n          onClick={toggleFollow}\n        >\n          {isFollow ? \"following\" : \"follow\"}\n        </Button>\n      </InfoWrap>\n    </CartContainer>\n  );\n};\n\nexport default Cart;\n\nCart.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    user: PropTypes.string.isRequired,\n    tweets: PropTypes.number.isRequired,\n    followers: PropTypes.number.isRequired,\n  }),\n};\n","import { useEffect, useState, useCallback } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { ListContainer, Button, Container } from \"./tweetsPage.styled\";\nimport Loader from \"../../components/Loader\";\nimport Cart from \"../../components/Cart/Cart\";\nimport { getUsers } from \"../../service/api\";\n\nconst TweetsPage = () => {\n  const location = useLocation();\n  const [users, setUsers] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoad, setIsload] = useState(false);\n\n  const getList = useCallback(async () => {\n    if (page === 1) {\n      setIsload(true);\n    }\n    const res = await getUsers(page);\n    if (page === 1) {\n      setUsers([...res]);\n      setIsload(false);\n    } else {\n      setUsers((prevState) => [...prevState, ...res]);\n      setIsload(false);\n    }\n  }, [page]);\n\n  useEffect(() => {\n    getList();\n  }, [getList]);\n\n  const handleMore = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <Container>\n      <Button to={location.state.from} style={{ left: \"0\" }}>\n        go Back\n      </Button>\n      <ListContainer>\n        {isLoad ? (\n          <Loader />\n        ) : (\n          users.map((item) => <Cart key={item.id} user={item} />)\n        )}\n      </ListContainer>\n      {!isLoad && (\n        <Button as=\"button\" style={{ position: \"static\" }} onClick={handleMore}>\n          Load More\n        </Button>\n      )}\n    </Container>\n  );\n};\nexport default TweetsPage;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","background","ListContainer","_templateObject2","Button","Link","_templateObject3","notify","error","toast","concat","message","position","POSITION","TOP_CENTER","instance","axios","create","baseURL","params","limit","getUsers","_getUsers","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","_yield$instance$get","data","_args","wrap","_context","prev","next","length","undefined","get","sent","abrupt","t0","stop","getUserById","_x","_getUserById","_callee2","id","_yield$instance$get2","_context2","getFollow","_x2","_x3","_getFollow","_callee3","_context3","put","_objectSpread","followers","CartContainer","Image","img","LogoImage","Line","_templateObject4","Circle","_templateObject5","Ring","_templateObject6","Avatar","_templateObject7","Name","p","_templateObject8","Info","_templateObject9","button","_templateObject10","InfoWrap","_templateObject11","_ref","src","_jsx","children","alt","user","_useFollow","useFollow","follow","addFollow","removeFollow","isFollowCart","some","item","_useState","useState","_useState2","_slicedToArray","isFollow","setIsFollow","_useState3","_useState4","setFollowers","toggleFollow","_ref2","numberPrettier","num","result","toString","split","splice","_jsxs","AvatarRing","avatar","tweets","style","backgroundColor","onClick","location","useLocation","users","setUsers","setPage","_useState5","_useState6","isLoad","setIsload","getList","useCallback","res","_toConsumableArray","prevState","useEffect","to","state","from","left","Loader","map","Cart","as"],"sourceRoot":""}